{
  "Other - Mouse related": {
    "prefix": ["ío"],
    "body": [
      "${1|non-selectable,no-pointer-events,all-pointer-events,cursor-pointer,cursor-not-allowed,cursor-inherit,cursor-none|}"
    ],
    "description": "non-selectable|no-pointer-events|all-pointer-events|cursor-pointer|cursor-not-allowed|cursor-inherit|cursor-none"
  },
  "Other - Scroll related": {
    "prefix": ["ío"],
    "body": ["${1|scroll,no-scroll,overflow-auto,overflow-hidden,overflow-hidden-y,hide-scrollbar|}"],
    "description": "scroll|no-scroll|overflow-auto|overflow-hidden|overflow-hidden-y|hide-scrollbar"
  },
  "Other - Orientation related - rotate": {
    "prefix": ["ío"],
    "body": ["rotate-${1|45,90,135,180,225,270,315|}"],
    "description": "rotate-(45|90|135|180|225|270|315)"
  },
  "Other - Orientation related - flip": {
    "prefix": ["ío"],
    "body": ["flip-${1|horizontal,verical|}"],
    "description": "flip-horizontal|vertical"
  },
  "Other - Border related": {
    "prefix": ["ío"],
    "body": ["${1|no-border,no-border-radius,no-box-shadow,no-outline,rounded-borders,border-radius-inherit|}"],
    "description": "no-border|no-border-radius|no-box-shadow|no-outline|rounded-borders|border-radius-inherit"
  },
  "Positioning - Alignment horizontal": {
    "prefix": ["íp"],
    "body": ["${1|float,on|}-${2|left,right|}"],
    "description": "float|on-left|right"
  },
  "Positioning - Alignment vertical": {
    "prefix": ["íp"],
    "body": ["vertical-${1|top,middle,bottom|}"],
    "description": "vertical-top|middle|bottom"
  },
  "Positioning - fixed, absolute, fullscreen and relative-position": {
    "prefix": ["íp"],
    "body": ["${1|fixed,absolute,fullscreen,relative-position|}"],
    "description": "fixed|absolute|fullscreen|relative-position"
  },
  "Positioning - fixed or absolute with directions": {
    "prefix": ["íp"],
    "body": [
      "${1|fixed,absolute|}-${2|center,top,right,bottom,left,top-left,top-right,bottom-left,bottom-right,full|}"
    ],
    "description": "(fixed|absolute)-(center|top|right|bottom|left|top-left|top-right|bottom-left|bottom-right|full)"
  },
  "Visibility - CSS Standard classes": {
    "prefix": ["ív"],
    "body": [
      "${1|disabled,hidden,invisible,transparent,dimmed,light-dimmed,ellipsis,ellipsis-2-lines,ellipsis-3-lines,z-top,z-max|}"
    ],
    "description": "disabled|hidden|invisible|transparent|dimmed|light-dimmed|ellipsis|ellipsis-2-lines|ellipsis-3-lines|z-top|z-max"
  },
  "Visibility - Plattform related": {
    "prefix": ["ív"],
    "body": [
      "${1|desktop-only,desktop-hide,mobile-only,mobile-hide,touch-only,touch-hide,plattform-ios-only,plattform-ios-hide,plattform-android-only,plattform-android-hide|}"
    ],
    "description": "desktop-only|desktop-hide|mobile-only|mobile-hide|touch-only|touch-hide|plattform-ios-only|plattform-ios-hide| plattform-android-only|plattform-android-hide"
  },
  "Visibility - Orientation related": {
    "prefix": ["ív"],
    "body": ["${1|orientation-portrait,orientation-landscape|}"],
    "description": "orientation-portrait|orientation-landscape"
  },
  "Visibility - Window width related": {
    "prefix": ["ív"],
    "body": ["${1|\u200B,gt-,lt-|}${2|xs,sm,md,lg,xl|}"],
    "description": "[gt|lt]-xs|sm|md|lg|xl /*xs>=0, sm>=600, md>=1024, lg>=1440, xl>=1920*/"
  },
  "Shadows - Others": {
    "prefix": ["ís"],
    "body": ["${1|no-shadow,inset-shadow,inset-shadow-down,shadow-transition|}"],
    "description": "no-shadow|inset-shadow|inset-shadow-down|shadow-transition"
  },
  "Shadows - Standard (1-24)": {
    "prefix": ["ís"],
    "body": ["shadow-${1|\u200B,up-}${2|1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24|}"],
    "description": "shadow-[up]-(1|2|..|23|24)"
  },
  "Colors - Text/background COLOR LIST": {
    "prefix": ["íc"],
    "body": [
      "${1|text,bg|}-${2|red,pink,purple,deep-purple,indigo,blue,light-blue,cyan,teal,green,light-green,lime,yellow,amber,orange,deep-orange,brown,grey,blue-gray|}-${3|1,2,3,4,5,6,7,8,9,10,11,12,13,14|}"
    ],
    "description": "(text|bg-red|pink|..|blue-gray)-(1|2|..|13|14)"
  },
  "Colors - Text/background BRAND colors": {
    "prefix": ["íc"],
    "body": ["${1|text,bg|}-${2|pimary,secondary,accent,dark,positive,negative,info,warning|}"],
    "description": "text|bg-pimary|secondary|accent|dark|positive|negative|info|warning"
  },
  "Typography - CSS helper classes": {
    "prefix": ["ít"],
    "body": ["text-${1|right,left,center,justify,bold,italic,no-wrap,strike,uppercase,lowercase,capitalize|}"],
    "description": "text-right|left|center|justify|bold|italic|no-wrap|strike|uppercase|lowercase|capitalize"
  },
  "Typography - Font weights": {
    "prefix": ["ít"],
    "body": ["text-weight-${1|thin,light,regular,medium,bold,bolder|}"],
    "description": "text-weight-(thin|light|regular|medium|bold|bolder)"
  },
  "Typography - Heading classes": {
    "prefix": ["ít"],
    "body": ["text-${1|h1,h2,h3,h4,h5,h6,subtitle1,subtitle2,body1,body2,caption,overline|}"],
    "description": "text-(h1|h2|..|h5|h6|subtitle1|subtitle2|body1|body2|caption|overline)"
  },
  "Margin classes - Margin/Padding": {
    "prefix": ["ím"],
    "body": ["q-${1|m,p|}${2|a,t,r,b,l,x,y|}-${3|\u200B,xs-,sm-,md-,lg-,xl-|}${4|xs,sm,md,lg,xl,none,auto|}"],
    "description": "q-(m|p)-(a|t|r|b|l|x|y)-[xs|sm|md|lg|xl]-(xs|sm|md|lg|xl|none|auto) /*auto - ONLY for: q-ml-*, q-mr-*, q-mx-* */"
  },
  "Margin Classes - No margin/No padding": {
    "prefix": ["ím"],
    "body": ["no-${1|margin,padding|}"],
    "description": "no-(margin|padding)"
  },
  "Flex parent - Container fit": {
    "prefix": ["ífp"],
    "body": ["${1|fit,full-width,full-height|}"],
    "description": "fit|full-width|full-height"
  },
  "Flex parent - Direction": {
    "prefix": ["ífp"],
    "body": ["${1|row,row inline,column,column inline,row reverse,column reverse|}"],
    "description": "row|row inline|column|column inline|row reverse|column reverse"
  },
  "Flex parent - Wrap": {
    "prefix": ["ífp"],
    "body": ["${1|wrap,no-wrap,reverse-wrap|}${2|\u200B,-xs,-sm,-md,-lg,-xl|}"],
    "description": "(wrap|no-wrap|reverse-wrap)-[xs|sm|md|lg|xl]"
  },
  "Flex p. - Align items-horizontal": {
    "prefix": ["ífp"],
    "body": ["justify-${1|\u200B,xs-,sm-,md-,lg-,xl-|}${2|start,end,center,between,around,evenly|}"],
    "description": "justify-[xs|sm|md|lg|xl]-(start|end|center|between|around|evemly)"
  },
  "Flex p. - Align items-vertical": {
    "prefix": ["ífp"],
    "body": ["items-${1|\u200B,xs-,sm-,md-,lg-,xl-|}${2|start,end,center,stretch,baseline|}"],
    "description": "items-[xs|sm|md|lg|xl]-(start|end|center|stretch|baseline)"
  },
  "Flex p. - Align Lines-vertical": {
    "prefix": ["ífp"],
    "body": ["content-${1|\u200B,xs-,sm-,md-,lg-,xl-|}${2|start,end,center,between,around|}"],
    "description": "content-[xs|sm|md|lg|xl]-(start|end|center|between|around)"
  },
  "Flex parent - Other": {
    "prefix": ["ífp"],
    "body": ["flex-${1|\u200B,xs-,sm-,md-,lg-,xl-|}${2|block,inline,center|}"],
    "description": "flex-[xs|sm|md|lg|xl]-(block|inline|center)"
  },
  "Flex child - Width/Offset": {
    "prefix": ["ífc"],
    "body": ["${1|col,offset|}-${2|\u200B,xs-,sm-,md-,lg-,xl-|}${3|1,2,3,4,5,6,7,8,9,10,11,12|}"],
    "description": "(col|offset)-[xs|sm|md|lg|xl]-(1|2|..|11|12)"
  },
  "Flex child - Alignment (self)": {
    "prefix": ["ífc"],
    "body": ["self-${1|\u200B,xs-,sm-,md-,lg-,xl-|}${2|start,end,center,stretch,baseline|}"],
    "description": "self-[xs|sm|md|lg|xl]-(start|end|center|stretch|baseline)"
  },
  "Flex child - Gutter": {
    "prefix": ["ífc"],
    "body": ["q-gutter-${1|\u200B,xs-,sm-,md-,lg-,xl-|}${2|\u200B,x-,y-|}${3|xs,sm,md,lg,xl|}"],
    "description": "q-gutter-[xs|sm|md|lg|xl]-[x,y]-(xs|sm|md|lg|xl)"
  },
  "Flex child - Col gutter": {
    "prefix": ["ífc"],
    "body": ["q-col-gutter-${1|\u200B,x-,y-|}${2|xs,sm,md,lg,xl|}"],
    "description": "q-col-gutter-[x,y]-(xs|sm|md|lg|xl)"
  },
  "Flex child - Order": {
    "prefix": ["ífc"],
    "body": ["order-${1|\u200B,xs-,sm-,md-,lg-,xl-|}${2|first,last,none|}"],
    "description": "order-[xs|sm|md|lg|xl]-(first|last|none)"
  },
  "Quasar Button": {
    "prefix": "űq-btn",
    "description": "Quasar Button",
    "body": ["<q-btn color=\"primary\" glossy icon=\"mdi-mail\" label=\"OK\" no-caps stack to=\"/\" />"]
  },
  "Quasar Banner": {
    "prefix": "űq-banner",
    "description": "Quasar Banner",
    "body": [
      "<q-banner :class=\"\\$q.dark.isActive ? 'bg-grey-9' : 'bg-grey-3'\">",
      "  My banner",
      "  <template v-slot:action>",
      "    <q-btn color=\"primary\" flat label=\"Go to home\" to=\"/\" />",
      "  </template>",
      "</q-banner>"
    ]
  },
  "Quasar Input": {
    "prefix": "űq-input",
    "description": "Quasar Input",
    "body": ["<q-input v-model=\"nev\" clearable label=\"Név\" outlined />"]
  },
  "Vue3 v-model": {
    "prefix": "úvModel",
    "body": ["v-model=\"${1:something}\""],
    "description": "Expects: varies based on value of form inputs element or output of components"
  },
  "vue3 init": {
    "prefix": "úvue3",
    "description": "Init vue3 with composition API + TS + script setup + Quasar",
    "scope": "vue",
    "body": [
      "<script setup lang=\"ts\"></script>",
      "",
      "<template>",
      "  <q-page></q-page>",
      "</template>",
      "",
      "<style lang=\"scss\" scoped></style>",
      ""
    ]
  },
  "Vue3 ref with type": {
    "prefix": "úreft",
    "description": "Reactice variable with type",
    "body": ["const reactive = ref(0);"]
  },
  "Vue3 ref": {
    "prefix": "úref",
    "description": "Reactive variable",
    "body": ["const reactive: Ref<number> = ref(0);"]
  },
  "Vue3 reactive": {
    "prefix": "úreactive",
    "description": "Reactive object",
    "body": [
      "\tconst author = reactive({",
      "\t\tfname: \"John\",",
      "\t\tlname: \"Doe\",",
      "\t\tbooks: [\"Vue 2 - Advanced Guide\", \"Vue 3 - Basic Guide\"]",
      "\t})"
    ]
  },
  "Vue3 computed": {
    "prefix": "úcomputed",
    "description": "computed property",
    "body": ["const fullName = computed(() => {", "\treturn `${author.fname} ${author.lname}`;", "});"]
  },
  "Vue3 props typed": {
    "prefix": "úpropst",
    "description": "Typed props",
    "body": [
      "const props = defineProps<{",
      "\temail: string;",
      "\tpassword: string;",
      "\tshowDialog: boolean;",
      "}>();"
    ]
  },
  "Vue3 props typed default": {
    "prefix": "úpropstd",
    "description": "Typed props with default values",
    "body": [
      "interface IProps {",
      "\temail?: string;",
      "\tpassword?: string;",
      "\tshowDialog: boolean;",
      "}",
      "const props = withDefaults(defineProps<IProps>(), {",
      "\temail: \"student001@jedlik.eu\",",
      "\tpassword: \"student001\",",
      "});"
    ]
  }

  // Place your jedlik-frontend-starter workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascripttypescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
}
